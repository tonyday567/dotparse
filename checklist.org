* checklist

[[https://hackage.haskell.org/package/dotparse]]
[[https://github.com/tonyday567/dotparse]]

#+begin_src sh :results output
  cd ~/haskell/dotparse
#+end_src

#+RESULTS:

- [ ] version check&bump
0.1.0.0

- [ ] ghcup upgrades

  #+begin_src sh :results output
  ghcup list -c set -r
  #+end_src

  #+RESULTS:
  : ghc 9.8.1 latest,base-4.19.0.0 hls-powered,2023-10-09
  : cabal 3.10.2.0 latest
  : hls 2.5.0.0 latest
  : stack 2.13.1 latest
  : ghcup 0.1.20.0 latest,recommended
- [ ] cabal.project check

  #+begin_src sh :results output
  cat cabal.project
  #+end_src

  #+RESULTS:
  : packages:
  :   mealy.cabal
- [ ] upstream publishings
- [ ] cabal update

  #+begin_src sh :results output
  cabal update
  #+end_src

  #+RESULTS:
  : Downloading the latest package list from hackage.haskell.org
  : Package list of hackage.haskell.org has been updated.
  : The index-state is set to 2023-12-19T03:05:53Z.
  : To revert to previous state run:
  :     cabal v2-update 'hackage.haskell.org,2023-12-18T22:41:30Z'
- [ ] cabal outdated
    #+begin_src sh :results output
    cabal outdated
    #+end_src

    #+RESULTS:
    : Outdated dependencies:
    : primitive >=0.7.2 && <0.9 (latest: 0.9.0.0)
- [ ] cabal gen-bounds
    #+begin_src sh :results output
    cabal gen-bounds
    #+end_src

    #+RESULTS:
    : Resolving dependencies...
    : Congratulations, all your dependencies have upper bounds!
- [ ] cabal build --ghc-options=-Wunused-packages
    #+begin_src sh :results output
    cabal clean && cabal build --ghc-options=-Wunused-packages
    #+end_src

    #+RESULTS:
    : Up to date
- [ ] cabal-fix

    #+begin_src sh :results output
    cabal-fix --gen
    #+end_src

    #+begin_src sh :results output
    cabal-fix -f ~/haskell/cabal-fix/my-cabal-fix.config
    #+end_src

    #+RESULTS:
    : Nothing

    #+begin_src sh :results output
    cabal-fix -i
    #+end_src

    #+RESULTS:
- [ ] cabal build --prefer-oldest

    #+begin_src sh :results output
    cabal build --prefer-oldest
    #+end_src
- [ ] FIXMEs & TODOs
- [ ] pragma cleanup
- [ ] cabal-docspec

    #+begin_src sh :results output
    cabal-docspec
    #+end_src

    #+RESULTS:
- [ ] cabal install
    #+begin_src sh :results output
    cabal install
    #+end_src
- [ ] cabal test
    #+begin_src sh :results output
    cabal test
    #+end_src
- [ ] cabal bench
    #+begin_src sh :results output
    cabal bench
    #+end_src

- [ ] ormolu

  #+begin_src sh :results output
  ormolu --mode check $(git ls-files '*.hs')
  #+end_src

  #+RESULTS:

  #+begin_src sh :results output
  ormolu --mode inplace $(git ls-files '*.hs')
  #+end_src

  #+RESULTS:
- [ ] hlint
  #+begin_src sh :results output
  hlint .
  #+end_src

  #+RESULTS:
  : No hints
- [ ] CI upgrade

  - check tested-with line in cabal file
- [ ] exact version bump
- [ ] branch, push & check CI
- [ ] haddock

  #+begin_src sh :results output
  cabal haddock
  #+end_src
- [ ] readme
- [ ] magit range
- [ ] ChangeLog
- [ ] PR to main
- [ ] merge PR
- [ ] immediate checkout and pull main
- [ ] cabal build with hackage ghc version

    #+begin_src sh :results output
    ghcup set ghc 9.2.4
    cabal build
    #+end_src
- [ ] final check

  #+begin_src sh :results output
  cabal clean && cabal build && cabal-docspec
  #+end_src
- [ ] hkgr tagdist

  #+begin_src sh :results output
  hkgr tagdist
  #+end_src

  #+RESULTS:
  : v0.12.0.1
  : Running hlint
  : Wrote tarball sdist to /Users/tonyday/haskell/perf/.hkgr/perf-0.12.0.1.tar.gz
- [ ] hkgr publish

  #+begin_src sh :results output
  hkgr tagdist
  #+end_src
- [ ] check Hackage
        Sometimes haddocks don't build on Hackage. Here's a recipe for uploading your own docs.

        #+begin_src sh
        cabal haddock --builddir=docs --haddock-for-hackage --enable-doc
        cabal upload -d --publish docs/*-docs.tar.gz
        #+end_src
